{
  "contractName": "ActorsRegistration",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "companies",
      "outputs": [
        {
          "internalType": "bytes8",
          "name": "",
          "type": "bytes8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes8",
          "name": "",
          "type": "bytes8"
        }
      ],
      "name": "cutterCompanies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "cutters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "foresters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "foresterAddress",
          "type": "address"
        }
      ],
      "name": "registerForester",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes8",
          "name": "cif",
          "type": "bytes8"
        },
        {
          "internalType": "address",
          "name": "cutterAddress",
          "type": "address"
        }
      ],
      "name": "registerCutter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "foresterAddress",
          "type": "address"
        }
      ],
      "name": "deleteForester",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes8",
          "name": "cif",
          "type": "bytes8"
        }
      ],
      "name": "deleteCutter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCompaniesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"companies\",\"outputs\":[{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"}],\"name\":\"cutterCompanies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cutters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes8\",\"name\":\"cif\",\"type\":\"bytes8\"}],\"name\":\"deleteCutter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"foresterAddress\",\"type\":\"address\"}],\"name\":\"deleteForester\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"foresters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCompaniesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes8\",\"name\":\"cif\",\"type\":\"bytes8\"},{\"internalType\":\"address\",\"name\":\"cutterAddress\",\"type\":\"address\"}],\"name\":\"registerCutter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"foresterAddress\",\"type\":\"address\"}],\"name\":\"registerForester\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ActorsRegistration.sol\":\"ActorsRegistration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ActorsRegistration.sol\":{\"keccak256\":\"0x159dfe6088241715c624e0cff9114554522aea6a3ad72d4459a2178daa5329f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7121cc49cb02fd380cb4c712b8aedd2de98676dc2fd9b9afb7e3b56ab3029ba\",\"dweb:/ipfs/QmTpq2KRy97137zta4xyAzS3oE3PfYwhj65eUrXEahGETg\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610cb1806100786000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063465f6b2b11610066578063465f6b2b1461014457806386a781aa14610174578063a5b4653c14610190578063b5c3c4ac146101ac578063ccb0a334146101c857610093565b8063253556c8146100985780632813d19d146100c85780632b9d6738146100f857806330d231ee14610128575b600080fd5b6100b260048036038101906100ad9190610937565b6101e6565b6040516100bf91906109a5565b60405180910390f35b6100e260048036038101906100dd91906109f6565b610219565b6040516100ef9190610a32565b60405180910390f35b610112600480360381019061010d9190610a79565b610250565b60405161011f9190610ac1565b60405180910390f35b610142600480360381019061013d9190610a79565b610270565b005b61015e60048036038101906101599190610a79565b610357565b60405161016b9190610ac1565b60405180910390f35b61018e60048036038101906101899190610a79565b610377565b005b6101aa60048036038101906101a59190610adc565b61045e565b005b6101c660048036038101906101c19190610937565b6106f5565b005b6101d06108ce565b6040516101dd9190610b2b565b60405180910390f35b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818154811061022957600080fd5b9060005260206000209060049182820401919006600802915054906101000a900460c01b81565b60026020528060005260406000206000915054906101000a900460ff1681565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f390610bc9565b60405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60036020528060005260406000206000915054906101000a900460ff1681565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610403576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fa90610bc9565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e190610bc9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160008477ffffffffffffffffffffffffffffffffffffffffffffffff191677ffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990610c5b565b60405180910390fd5b80600160008477ffffffffffffffffffffffffffffffffffffffffffffffff191677ffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060008290806001815401808255809150506001900390600052602060002090600491828204019190066008029091909190916101000a81548167ffffffffffffffff021916908360c01c02179055505050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077890610bc9565b60405180910390fd5b600060026000600160008577ffffffffffffffffffffffffffffffffffffffffffffffff191677ffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600160008377ffffffffffffffffffffffffffffffffffffffffffffffff191677ffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008080549050905090565b600080fd5b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b610914816108df565b811461091f57600080fd5b50565b6000813590506109318161090b565b92915050565b60006020828403121561094d5761094c6108da565b5b600061095b84828501610922565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061098f82610964565b9050919050565b61099f81610984565b82525050565b60006020820190506109ba6000830184610996565b92915050565b6000819050919050565b6109d3816109c0565b81146109de57600080fd5b50565b6000813590506109f0816109ca565b92915050565b600060208284031215610a0c57610a0b6108da565b5b6000610a1a848285016109e1565b91505092915050565b610a2c816108df565b82525050565b6000602082019050610a476000830184610a23565b92915050565b610a5681610984565b8114610a6157600080fd5b50565b600081359050610a7381610a4d565b92915050565b600060208284031215610a8f57610a8e6108da565b5b6000610a9d84828501610a64565b91505092915050565b60008115159050919050565b610abb81610aa6565b82525050565b6000602082019050610ad66000830184610ab2565b92915050565b60008060408385031215610af357610af26108da565b5b6000610b0185828601610922565b9250506020610b1285828601610a64565b9150509250929050565b610b25816109c0565b82525050565b6000602082019050610b406000830184610b1c565b92915050565b600082825260208201905092915050565b7f4e6f74207573696e672061207265676973746572656420666f7265737465722060008201527f6164647265737300000000000000000000000000000000000000000000000000602082015250565b6000610bb3602783610b46565b9150610bbe82610b57565b604082019050919050565b60006020820190508181036000830152610be281610ba6565b9050919050565b7f43757474657220636f6d70616e7920616c72656164792072656769737465726560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000610c45602183610b46565b9150610c5082610be9565b604082019050919050565b60006020820190508181036000830152610c7481610c38565b905091905056fea2646970667358221220597d6276b630a8afd2df4a9ed6f2404a9ade9d1b1d8dac166aab4cc2d4160d6a64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063465f6b2b11610066578063465f6b2b1461014457806386a781aa14610174578063a5b4653c14610190578063b5c3c4ac146101ac578063ccb0a334146101c857610093565b8063253556c8146100985780632813d19d146100c85780632b9d6738146100f857806330d231ee14610128575b600080fd5b6100b260048036038101906100ad9190610937565b6101e6565b6040516100bf91906109a5565b60405180910390f35b6100e260048036038101906100dd91906109f6565b610219565b6040516100ef9190610a32565b60405180910390f35b610112600480360381019061010d9190610a79565b610250565b60405161011f9190610ac1565b60405180910390f35b610142600480360381019061013d9190610a79565b610270565b005b61015e60048036038101906101599190610a79565b610357565b60405161016b9190610ac1565b60405180910390f35b61018e60048036038101906101899190610a79565b610377565b005b6101aa60048036038101906101a59190610adc565b61045e565b005b6101c660048036038101906101c19190610937565b6106f5565b005b6101d06108ce565b6040516101dd9190610b2b565b60405180910390f35b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818154811061022957600080fd5b9060005260206000209060049182820401919006600802915054906101000a900460c01b81565b60026020528060005260406000206000915054906101000a900460ff1681565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f390610bc9565b60405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60036020528060005260406000206000915054906101000a900460ff1681565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610403576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fa90610bc9565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e190610bc9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160008477ffffffffffffffffffffffffffffffffffffffffffffffff191677ffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990610c5b565b60405180910390fd5b80600160008477ffffffffffffffffffffffffffffffffffffffffffffffff191677ffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060008290806001815401808255809150506001900390600052602060002090600491828204019190066008029091909190916101000a81548167ffffffffffffffff021916908360c01c02179055505050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077890610bc9565b60405180910390fd5b600060026000600160008577ffffffffffffffffffffffffffffffffffffffffffffffff191677ffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600160008377ffffffffffffffffffffffffffffffffffffffffffffffff191677ffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008080549050905090565b600080fd5b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b610914816108df565b811461091f57600080fd5b50565b6000813590506109318161090b565b92915050565b60006020828403121561094d5761094c6108da565b5b600061095b84828501610922565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061098f82610964565b9050919050565b61099f81610984565b82525050565b60006020820190506109ba6000830184610996565b92915050565b6000819050919050565b6109d3816109c0565b81146109de57600080fd5b50565b6000813590506109f0816109ca565b92915050565b600060208284031215610a0c57610a0b6108da565b5b6000610a1a848285016109e1565b91505092915050565b610a2c816108df565b82525050565b6000602082019050610a476000830184610a23565b92915050565b610a5681610984565b8114610a6157600080fd5b50565b600081359050610a7381610a4d565b92915050565b600060208284031215610a8f57610a8e6108da565b5b6000610a9d84828501610a64565b91505092915050565b60008115159050919050565b610abb81610aa6565b82525050565b6000602082019050610ad66000830184610ab2565b92915050565b60008060408385031215610af357610af26108da565b5b6000610b0185828601610922565b9250506020610b1285828601610a64565b9150509250929050565b610b25816109c0565b82525050565b6000602082019050610b406000830184610b1c565b92915050565b600082825260208201905092915050565b7f4e6f74207573696e672061207265676973746572656420666f7265737465722060008201527f6164647265737300000000000000000000000000000000000000000000000000602082015250565b6000610bb3602783610b46565b9150610bbe82610b57565b604082019050919050565b60006020820190508181036000830152610be281610ba6565b9050919050565b7f43757474657220636f6d70616e7920616c72656164792072656769737465726560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000610c45602183610b46565b9150610c5082610be9565b604082019050919050565b60006020820190508181036000830152610c7481610c38565b905091905056fea2646970667358221220597d6276b630a8afd2df4a9ed6f2404a9ade9d1b1d8dac166aab4cc2d4160d6a64736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6802:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:4",
                "type": ""
              }
            ],
            "src": "7:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "378:105:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "388:89:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "403:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "410:66:4",
                        "type": "",
                        "value": "0xffffffffffffffff000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "399:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "399:78:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "388:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "360:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "370:7:4",
                "type": ""
              }
            ],
            "src": "334:149:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "531:78:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "587:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "596:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "599:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "589:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "589:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "589:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "554:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "578:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes8",
                              "nodeType": "YulIdentifier",
                              "src": "561:16:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "561:23:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "551:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "551:34:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "544:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:42:4"
                  },
                  "nodeType": "YulIf",
                  "src": "541:62:4"
                }
              ]
            },
            "name": "validator_revert_t_bytes8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "524:5:4",
                "type": ""
              }
            ],
            "src": "489:120:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "666:86:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "676:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "698:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "685:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "685:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "676:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "740:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes8",
                      "nodeType": "YulIdentifier",
                      "src": "714:25:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "714:32:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "714:32:4"
                }
              ]
            },
            "name": "abi_decode_t_bytes8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "644:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "652:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "660:5:4",
                "type": ""
              }
            ],
            "src": "615:137:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "823:262:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "871:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "844:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "853:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "840:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "840:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "865:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "836:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "836:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "833:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "962:116:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "977:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "991:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "981:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1006:62:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1040:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1051:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1036:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1036:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1060:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes8",
                          "nodeType": "YulIdentifier",
                          "src": "1016:19:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1016:52:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1006:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "793:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "804:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "816:6:4",
                "type": ""
              }
            ],
            "src": "758:327:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1136:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1146:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1161:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1168:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1157:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1157:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1146:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1118:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1128:7:4",
                "type": ""
              }
            ],
            "src": "1091:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1268:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1278:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1307:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1289:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1278:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1250:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1260:7:4",
                "type": ""
              }
            ],
            "src": "1223:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1390:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1407:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1430:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1412:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1412:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1400:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1400:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1400:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1378:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1385:3:4",
                "type": ""
              }
            ],
            "src": "1325:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1547:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1557:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1569:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1580:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1565:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1565:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1557:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1637:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1650:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1661:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1646:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1646:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1593:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1593:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1593:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1519:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1531:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1542:4:4",
                "type": ""
              }
            ],
            "src": "1449:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1722:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1732:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1743:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1732:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1704:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1714:7:4",
                "type": ""
              }
            ],
            "src": "1677:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1803:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1860:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1869:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1872:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1862:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1862:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1862:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1826:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1851:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1833:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1833:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1823:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1823:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1816:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1816:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1813:63:4"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1796:5:4",
                "type": ""
              }
            ],
            "src": "1760:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1940:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1950:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1972:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1959:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1959:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1950:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2015:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1988:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1988:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1988:33:4"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1918:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1926:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1934:5:4",
                "type": ""
              }
            ],
            "src": "1888:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2099:263:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2145:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2147:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2147:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2147:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2120:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2129:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2116:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2116:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2141:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2112:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2112:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2109:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2238:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2253:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2267:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2257:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2282:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2317:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2328:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2313:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2313:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2337:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2292:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2292:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2282:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2069:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2080:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2092:6:4",
                "type": ""
              }
            ],
            "src": "2033:329:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2431:52:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2448:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2470:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes8",
                          "nodeType": "YulIdentifier",
                          "src": "2453:16:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2453:23:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2441:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2441:36:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2441:36:4"
                }
              ]
            },
            "name": "abi_encode_t_bytes8_to_t_bytes8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2419:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2426:3:4",
                "type": ""
              }
            ],
            "src": "2368:115:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2585:122:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2595:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2607:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2618:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2603:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2603:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2595:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2673:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2686:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2697:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2682:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2682:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes8_to_t_bytes8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2631:41:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2631:69:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2631:69:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes8__to_t_bytes8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2557:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2569:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2580:4:4",
                "type": ""
              }
            ],
            "src": "2489:218:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2756:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2813:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2822:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2825:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2815:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2815:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2815:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2779:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2804:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2786:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2786:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2776:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2776:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2769:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2769:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2766:63:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2749:5:4",
                "type": ""
              }
            ],
            "src": "2713:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2893:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2903:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2925:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2912:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2912:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2903:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2968:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2941:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2941:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2941:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2871:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2879:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2887:5:4",
                "type": ""
              }
            ],
            "src": "2841:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3052:263:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3098:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3100:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3100:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3100:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3073:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3082:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3069:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3069:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3094:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3065:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3065:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3062:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3191:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3206:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3220:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3210:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3235:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3270:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3281:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3266:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3266:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3290:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3245:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3245:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3235:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3022:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3033:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3045:6:4",
                "type": ""
              }
            ],
            "src": "2986:329:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3363:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3373:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3398:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3391:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3391:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3384:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3384:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3373:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3345:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3355:7:4",
                "type": ""
              }
            ],
            "src": "3321:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3476:50:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3493:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3513:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3498:14:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3498:21:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3486:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3486:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3486:34:4"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3464:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3471:3:4",
                "type": ""
              }
            ],
            "src": "3417:109:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3624:118:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3634:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3646:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3657:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3642:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3642:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3634:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3708:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3721:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3732:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3717:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3717:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3670:37:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3670:65:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3670:65:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3596:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3608:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3619:4:4",
                "type": ""
              }
            ],
            "src": "3532:210:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3830:390:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3876:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3878:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3878:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3878:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3851:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3860:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3847:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3847:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3872:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3843:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3843:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3840:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3969:116:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3984:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3998:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3988:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4013:62:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4047:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4058:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4043:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4043:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4067:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes8",
                          "nodeType": "YulIdentifier",
                          "src": "4023:19:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4023:52:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4013:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4095:118:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4110:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4124:2:4",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4114:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4140:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4175:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4186:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4171:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4171:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4195:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4150:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4150:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4140:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes8t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3792:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3803:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3815:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3823:6:4",
                "type": ""
              }
            ],
            "src": "3748:472:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4291:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4308:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4331:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4313:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4313:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4301:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4301:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4301:37:4"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4279:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4286:3:4",
                "type": ""
              }
            ],
            "src": "4226:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4448:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4458:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4470:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4481:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4466:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4466:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4458:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4538:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4551:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4562:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4547:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4547:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4494:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4494:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4494:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4420:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4432:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4443:4:4",
                "type": ""
              }
            ],
            "src": "4350:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4674:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4691:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4696:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4684:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4684:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4684:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4712:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4731:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4736:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4727:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4727:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4712:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4646:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4651:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4662:11:4",
                "type": ""
              }
            ],
            "src": "4578:169:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4859:120:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4881:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4889:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4877:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4877:14:4"
                      },
                      {
                        "hexValue": "4e6f74207573696e672061207265676973746572656420666f72657374657220",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4893:34:4",
                        "type": "",
                        "value": "Not using a registered forester "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4870:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4870:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4870:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4949:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4957:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4945:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4945:15:4"
                      },
                      {
                        "hexValue": "61646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4962:9:4",
                        "type": "",
                        "value": "address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4938:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4938:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4938:34:4"
                }
              ]
            },
            "name": "store_literal_in_memory_1585053ba808b58cf90e68a606e71e52b965f1f7a4d03f2907acda5bf167c09e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4851:6:4",
                "type": ""
              }
            ],
            "src": "4753:226:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5131:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5141:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5207:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5212:2:4",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5148:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5148:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5141:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5313:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1585053ba808b58cf90e68a606e71e52b965f1f7a4d03f2907acda5bf167c09e",
                      "nodeType": "YulIdentifier",
                      "src": "5224:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5224:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5224:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5326:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5337:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5342:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5333:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5333:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5326:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1585053ba808b58cf90e68a606e71e52b965f1f7a4d03f2907acda5bf167c09e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5119:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5127:3:4",
                "type": ""
              }
            ],
            "src": "4985:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5528:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5538:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5550:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5561:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5546:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5546:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5538:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5585:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5596:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5581:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5581:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5604:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5610:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5600:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5600:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5574:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5574:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5574:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5630:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5764:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1585053ba808b58cf90e68a606e71e52b965f1f7a4d03f2907acda5bf167c09e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5638:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5638:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5630:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1585053ba808b58cf90e68a606e71e52b965f1f7a4d03f2907acda5bf167c09e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5508:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5523:4:4",
                "type": ""
              }
            ],
            "src": "5357:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5888:114:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5910:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5918:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5906:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5906:14:4"
                      },
                      {
                        "hexValue": "43757474657220636f6d70616e7920616c726561647920726567697374657265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5922:34:4",
                        "type": "",
                        "value": "Cutter company already registere"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5899:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5899:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5899:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5978:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5986:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5974:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5974:15:4"
                      },
                      {
                        "hexValue": "64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5991:3:4",
                        "type": "",
                        "value": "d"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5967:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5967:28:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5967:28:4"
                }
              ]
            },
            "name": "store_literal_in_memory_5ec9d88a5cac1587011c4484eed1ef3d1dfe271538eb3bba81b8ebaa077e97b4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5880:6:4",
                "type": ""
              }
            ],
            "src": "5782:220:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6154:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6164:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6230:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6235:2:4",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6171:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6171:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6164:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6336:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_5ec9d88a5cac1587011c4484eed1ef3d1dfe271538eb3bba81b8ebaa077e97b4",
                      "nodeType": "YulIdentifier",
                      "src": "6247:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6247:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6247:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6349:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6360:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6365:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6356:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6356:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6349:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_5ec9d88a5cac1587011c4484eed1ef3d1dfe271538eb3bba81b8ebaa077e97b4_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6142:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6150:3:4",
                "type": ""
              }
            ],
            "src": "6008:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6551:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6561:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6573:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6584:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6569:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6569:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6561:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6608:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6619:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6604:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6604:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6627:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6633:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6623:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6623:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6597:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6597:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6597:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6653:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6787:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_5ec9d88a5cac1587011c4484eed1ef3d1dfe271538eb3bba81b8ebaa077e97b4_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6661:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6661:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6653:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5ec9d88a5cac1587011c4484eed1ef3d1dfe271538eb3bba81b8ebaa077e97b4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6531:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6546:4:4",
                "type": ""
              }
            ],
            "src": "6380:419:4"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes8(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes8(value) {\n        if iszero(eq(value, cleanup_t_bytes8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes8(value)\n    }\n\n    function abi_decode_tuple_t_bytes8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes8_to_t_bytes8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes8(value))\n    }\n\n    function abi_encode_tuple_t_bytes8__to_t_bytes8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes8_to_t_bytes8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes8t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1585053ba808b58cf90e68a606e71e52b965f1f7a4d03f2907acda5bf167c09e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not using a registered forester \")\n\n        mstore(add(memPtr, 32), \"address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1585053ba808b58cf90e68a606e71e52b965f1f7a4d03f2907acda5bf167c09e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_1585053ba808b58cf90e68a606e71e52b965f1f7a4d03f2907acda5bf167c09e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1585053ba808b58cf90e68a606e71e52b965f1f7a4d03f2907acda5bf167c09e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1585053ba808b58cf90e68a606e71e52b965f1f7a4d03f2907acda5bf167c09e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5ec9d88a5cac1587011c4484eed1ef3d1dfe271538eb3bba81b8ebaa077e97b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cutter company already registere\")\n\n        mstore(add(memPtr, 32), \"d\")\n\n    }\n\n    function abi_encode_t_stringliteral_5ec9d88a5cac1587011c4484eed1ef3d1dfe271538eb3bba81b8ebaa077e97b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_5ec9d88a5cac1587011c4484eed1ef3d1dfe271538eb3bba81b8ebaa077e97b4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ec9d88a5cac1587011c4484eed1ef3d1dfe271538eb3bba81b8ebaa077e97b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ec9d88a5cac1587011c4484eed1ef3d1dfe271538eb3bba81b8ebaa077e97b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "71:1269:0:-:0;;;292:61;;;;;;;;;;341:4;317:9;:21;327:10;317:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;71:1269;;;;;;",
  "deployedSourceMap": "71:1269:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;140:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;108:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;196:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;503:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;242:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;941:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;636:297;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1073:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1237:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;140:49;;;;;;;;;;;;;;;;;;;;;;:::o;108:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;196:39::-;;;;;;;;;;;;;;;;;;;;;;:::o;503:125::-;410:9;:21;420:10;410:21;;;;;;;;;;;;;;;;;;;;;;;;;402:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;616:4:::1;587:9;:26;597:15;587:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;503:125:::0;:::o;242:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;941:124::-;410:9;:21;420:10;410:21;;;;;;;;;;;;;;;;;;;;;;;;;402:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1052:5:::1;1023:9;:26;1033:15;1023:26;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;941:124:::0;:::o;636:297::-;410:9;:21;420:10;410:21;;;;;;;;;;;;;;;;;;;;;;;;;402:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;768:1:::1;736:34;;:15;:20;752:3;736:20;;;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;728:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;842:13;819:15;:20;835:3;819:20;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;891:4;866:7;:22;874:13;866:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;906:9;921:3;906:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;636:297:::0;;:::o;1073:156::-;410:9;:21;420:10;410:21;;;;;;;;;;;;;;;;;;;;;;;;;402:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1172:5:::1;1140:7;:29;1148:15;:20;1164:3;1148:20;;;;;;;;;;;;;;;;;;;;;;;;;;;1140:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;1219:1;1188:15;:20;1204:3;1188:20;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;1073:156:::0;:::o;1237:100::-;1289:4;1313:9;:16;;;;1306:23;;1237:100;:::o;88:117:4:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:126::-;1128:7;1168:42;1161:5;1157:54;1146:65;;1091:126;;;:::o;1223:96::-;1260:7;1289:24;1307:5;1289:24;:::i;:::-;1278:35;;1223:96;;;:::o;1325:118::-;1412:24;1430:5;1412:24;:::i;:::-;1407:3;1400:37;1325:118;;:::o;1449:222::-;1542:4;1580:2;1569:9;1565:18;1557:26;;1593:71;1661:1;1650:9;1646:17;1637:6;1593:71;:::i;:::-;1449:222;;;;:::o;1677:77::-;1714:7;1743:5;1732:16;;1677:77;;;:::o;1760:122::-;1833:24;1851:5;1833:24;:::i;:::-;1826:5;1823:35;1813:63;;1872:1;1869;1862:12;1813:63;1760:122;:::o;1888:139::-;1934:5;1972:6;1959:20;1950:29;;1988:33;2015:5;1988:33;:::i;:::-;1888:139;;;;:::o;2033:329::-;2092:6;2141:2;2129:9;2120:7;2116:23;2112:32;2109:119;;;2147:79;;:::i;:::-;2109:119;2267:1;2292:53;2337:7;2328:6;2317:9;2313:22;2292:53;:::i;:::-;2282:63;;2238:117;2033:329;;;;:::o;2368:115::-;2453:23;2470:5;2453:23;:::i;:::-;2448:3;2441:36;2368:115;;:::o;2489:218::-;2580:4;2618:2;2607:9;2603:18;2595:26;;2631:69;2697:1;2686:9;2682:17;2673:6;2631:69;:::i;:::-;2489:218;;;;:::o;2713:122::-;2786:24;2804:5;2786:24;:::i;:::-;2779:5;2776:35;2766:63;;2825:1;2822;2815:12;2766:63;2713:122;:::o;2841:139::-;2887:5;2925:6;2912:20;2903:29;;2941:33;2968:5;2941:33;:::i;:::-;2841:139;;;;:::o;2986:329::-;3045:6;3094:2;3082:9;3073:7;3069:23;3065:32;3062:119;;;3100:79;;:::i;:::-;3062:119;3220:1;3245:53;3290:7;3281:6;3270:9;3266:22;3245:53;:::i;:::-;3235:63;;3191:117;2986:329;;;;:::o;3321:90::-;3355:7;3398:5;3391:13;3384:21;3373:32;;3321:90;;;:::o;3417:109::-;3498:21;3513:5;3498:21;:::i;:::-;3493:3;3486:34;3417:109;;:::o;3532:210::-;3619:4;3657:2;3646:9;3642:18;3634:26;;3670:65;3732:1;3721:9;3717:17;3708:6;3670:65;:::i;:::-;3532:210;;;;:::o;3748:472::-;3815:6;3823;3872:2;3860:9;3851:7;3847:23;3843:32;3840:119;;;3878:79;;:::i;:::-;3840:119;3998:1;4023:52;4067:7;4058:6;4047:9;4043:22;4023:52;:::i;:::-;4013:62;;3969:116;4124:2;4150:53;4195:7;4186:6;4175:9;4171:22;4150:53;:::i;:::-;4140:63;;4095:118;3748:472;;;;;:::o;4226:118::-;4313:24;4331:5;4313:24;:::i;:::-;4308:3;4301:37;4226:118;;:::o;4350:222::-;4443:4;4481:2;4470:9;4466:18;4458:26;;4494:71;4562:1;4551:9;4547:17;4538:6;4494:71;:::i;:::-;4350:222;;;;:::o;4578:169::-;4662:11;4696:6;4691:3;4684:19;4736:4;4731:3;4727:14;4712:29;;4578:169;;;;:::o;4753:226::-;4893:34;4889:1;4881:6;4877:14;4870:58;4962:9;4957:2;4949:6;4945:15;4938:34;4753:226;:::o;4985:366::-;5127:3;5148:67;5212:2;5207:3;5148:67;:::i;:::-;5141:74;;5224:93;5313:3;5224:93;:::i;:::-;5342:2;5337:3;5333:12;5326:19;;4985:366;;;:::o;5357:419::-;5523:4;5561:2;5550:9;5546:18;5538:26;;5610:9;5604:4;5600:20;5596:1;5585:9;5581:17;5574:47;5638:131;5764:4;5638:131;:::i;:::-;5630:139;;5357:419;;;:::o;5782:220::-;5922:34;5918:1;5910:6;5906:14;5899:58;5991:3;5986:2;5978:6;5974:15;5967:28;5782:220;:::o;6008:366::-;6150:3;6171:67;6235:2;6230:3;6171:67;:::i;:::-;6164:74;;6247:93;6336:3;6247:93;:::i;:::-;6365:2;6360:3;6356:12;6349:19;;6008:366;;;:::o;6380:419::-;6546:4;6584:2;6573:9;6569:18;6561:26;;6633:9;6627:4;6623:20;6619:1;6608:9;6604:17;6597:47;6661:131;6787:4;6661:131;:::i;:::-;6653:139;;6380:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract ActorsRegistration {\r\n\r\n    bytes8[] public companies;\r\n    mapping(bytes8 => address) public cutterCompanies;\r\n    mapping(address => bool) public cutters;\r\n    mapping(address => bool) public foresters;\r\n\r\n    constructor() {\r\n        foresters[msg.sender] = true;\r\n    }\r\n\r\n    modifier onlyForester {        \r\n        require(foresters[msg.sender], \"Not using a registered forester address\");\r\n        _;\r\n    }\r\n\r\n    function registerForester(address foresterAddress) onlyForester external {\r\n        foresters[foresterAddress] = true;\r\n    }\r\n\r\n    function registerCutter(bytes8 cif, address cutterAddress) onlyForester external {\r\n        require(cutterCompanies[cif] == address(0), \"Cutter company already registered\");\r\n        cutterCompanies[cif] = cutterAddress;\r\n        cutters[cutterAddress] = true;\r\n        companies.push(cif);\r\n    }\r\n\r\n    function deleteForester(address foresterAddress) onlyForester external {\r\n        foresters[foresterAddress] = false;\r\n    }\r\n\r\n    function deleteCutter(bytes8 cif) onlyForester external {\r\n        cutters[cutterCompanies[cif]] = false;\r\n        cutterCompanies[cif] = address(0);\r\n    }\r\n\r\n    function getCompaniesCount() external view returns (uint) {\r\n        return companies.length;\r\n    }\r\n}",
  "sourcePath": "D:\\Faculta\\Year_4\\LICENTA\\tree-chain-react\\contracts\\ActorsRegistration.sol",
  "ast": {
    "absolutePath": "project:/contracts/ActorsRegistration.sol",
    "exportedSymbols": {
      "ActorsRegistration": [
        142
      ]
    },
    "id": 143,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ActorsRegistration",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 142,
        "linearizedBaseContracts": [
          142
        ],
        "name": "ActorsRegistration",
        "nameLocation": "80:18:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2813d19d",
            "id": 4,
            "mutability": "mutable",
            "name": "companies",
            "nameLocation": "124:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 142,
            "src": "108:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes8_$dyn_storage",
              "typeString": "bytes8[]"
            },
            "typeName": {
              "baseType": {
                "id": 2,
                "name": "bytes8",
                "nodeType": "ElementaryTypeName",
                "src": "108:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes8",
                  "typeString": "bytes8"
                }
              },
              "id": 3,
              "nodeType": "ArrayTypeName",
              "src": "108:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes8_$dyn_storage_ptr",
                "typeString": "bytes8[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "253556c8",
            "id": 8,
            "mutability": "mutable",
            "name": "cutterCompanies",
            "nameLocation": "174:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 142,
            "src": "140:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes8_$_t_address_$",
              "typeString": "mapping(bytes8 => address)"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 5,
                "name": "bytes8",
                "nodeType": "ElementaryTypeName",
                "src": "148:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes8",
                  "typeString": "bytes8"
                }
              },
              "nodeType": "Mapping",
              "src": "140:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes8_$_t_address_$",
                "typeString": "mapping(bytes8 => address)"
              },
              "valueType": {
                "id": 6,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "158:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2b9d6738",
            "id": 12,
            "mutability": "mutable",
            "name": "cutters",
            "nameLocation": "228:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 142,
            "src": "196:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "204:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "196:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 10,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "215:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "465f6b2b",
            "id": 16,
            "mutability": "mutable",
            "name": "foresters",
            "nameLocation": "274:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 142,
            "src": "242:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "250:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "242:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 14,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "261:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "306:47:0",
              "statements": [
                {
                  "expression": {
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19,
                        "name": "foresters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "317:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 22,
                      "indexExpression": {
                        "expression": {
                          "id": 20,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "327:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "327:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "317:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "341:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "317:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "317:28:0"
                }
              ]
            },
            "id": 27,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "303:2:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:0:0"
            },
            "scope": 142,
            "src": "292:61:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "383:112:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 30,
                          "name": "foresters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "410:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 33,
                        "indexExpression": {
                          "expression": {
                            "id": 31,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "420:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "420:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "410:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74207573696e672061207265676973746572656420666f7265737465722061646472657373",
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "433:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1585053ba808b58cf90e68a606e71e52b965f1f7a4d03f2907acda5bf167c09e",
                          "typeString": "literal_string \"Not using a registered forester address\""
                        },
                        "value": "Not using a registered forester address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1585053ba808b58cf90e68a606e71e52b965f1f7a4d03f2907acda5bf167c09e",
                          "typeString": "literal_string \"Not using a registered forester address\""
                        }
                      ],
                      "id": 29,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "402:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "402:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "402:73:0"
                },
                {
                  "id": 37,
                  "nodeType": "PlaceholderStatement",
                  "src": "486:1:0"
                }
              ]
            },
            "id": 39,
            "name": "onlyForester",
            "nameLocation": "370:12:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "383:0:0"
            },
            "src": "361:134:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "576:52:0",
              "statements": [
                {
                  "expression": {
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46,
                        "name": "foresters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "587:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 48,
                      "indexExpression": {
                        "id": 47,
                        "name": "foresterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "597:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "587:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "616:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "587:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "587:33:0"
                }
              ]
            },
            "functionSelector": "30d231ee",
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 43,
                  "name": "onlyForester",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "554:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "554:12:0"
              }
            ],
            "name": "registerForester",
            "nameLocation": "512:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "foresterAddress",
                  "nameLocation": "537:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "529:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "528:25:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:0:0"
            },
            "scope": 142,
            "src": "503:125:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "717:216:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 63,
                            "name": "cutterCompanies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "736:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes8_$_t_address_$",
                              "typeString": "mapping(bytes8 => address)"
                            }
                          },
                          "id": 65,
                          "indexExpression": {
                            "id": 64,
                            "name": "cif",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "752:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes8",
                              "typeString": "bytes8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "736:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "768:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 67,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "760:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 66,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "760:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "760:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "736:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43757474657220636f6d70616e7920616c72656164792072656769737465726564",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "772:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ec9d88a5cac1587011c4484eed1ef3d1dfe271538eb3bba81b8ebaa077e97b4",
                          "typeString": "literal_string \"Cutter company already registered\""
                        },
                        "value": "Cutter company already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ec9d88a5cac1587011c4484eed1ef3d1dfe271538eb3bba81b8ebaa077e97b4",
                          "typeString": "literal_string \"Cutter company already registered\""
                        }
                      ],
                      "id": 62,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "728:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "728:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "728:80:0"
                },
                {
                  "expression": {
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74,
                        "name": "cutterCompanies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "819:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes8_$_t_address_$",
                          "typeString": "mapping(bytes8 => address)"
                        }
                      },
                      "id": 76,
                      "indexExpression": {
                        "id": 75,
                        "name": "cif",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "835:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes8",
                          "typeString": "bytes8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "819:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 77,
                      "name": "cutterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "842:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "819:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "819:36:0"
                },
                {
                  "expression": {
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80,
                        "name": "cutters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "866:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 82,
                      "indexExpression": {
                        "id": 81,
                        "name": "cutterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "874:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "866:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "891:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "866:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "866:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89,
                        "name": "cif",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "921:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes8",
                          "typeString": "bytes8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes8",
                          "typeString": "bytes8"
                        }
                      ],
                      "expression": {
                        "id": 86,
                        "name": "companies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "906:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes8_$dyn_storage",
                          "typeString": "bytes8[] storage ref"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "906:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes8_$dyn_storage_ptr_$_t_bytes8_$returns$__$bound_to$_t_array$_t_bytes8_$dyn_storage_ptr_$",
                        "typeString": "function (bytes8[] storage pointer,bytes8)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "906:19:0"
                }
              ]
            },
            "functionSelector": "a5b4653c",
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59,
                  "name": "onlyForester",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "695:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "695:12:0"
              }
            ],
            "name": "registerCutter",
            "nameLocation": "645:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "cif",
                  "nameLocation": "667:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "660:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "bytes8",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "cutterAddress",
                  "nameLocation": "680:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "672:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "672:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "659:35:0"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "717:0:0"
            },
            "scope": 142,
            "src": "636:297:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1012:53:0",
              "statements": [
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 100,
                        "name": "foresters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1023:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 102,
                      "indexExpression": {
                        "id": 101,
                        "name": "foresterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "1033:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1023:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1052:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1023:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1023:34:0"
                }
              ]
            },
            "functionSelector": "86a781aa",
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 98,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 97,
                  "name": "onlyForester",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "990:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "990:12:0"
              }
            ],
            "name": "deleteForester",
            "nameLocation": "950:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "foresterAddress",
                  "nameLocation": "973:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "965:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "964:25:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:0:0"
            },
            "scope": 142,
            "src": "941:124:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "1129:100:0",
              "statements": [
                {
                  "expression": {
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 114,
                        "name": "cutters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1140:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 118,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 115,
                          "name": "cutterCompanies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1148:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes8_$_t_address_$",
                            "typeString": "mapping(bytes8 => address)"
                          }
                        },
                        "id": 117,
                        "indexExpression": {
                          "id": 116,
                          "name": "cif",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "1164:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes8",
                            "typeString": "bytes8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1148:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1140:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1172:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1140:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1140:37:0"
                },
                {
                  "expression": {
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 122,
                        "name": "cutterCompanies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1188:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes8_$_t_address_$",
                          "typeString": "mapping(bytes8 => address)"
                        }
                      },
                      "id": 124,
                      "indexExpression": {
                        "id": 123,
                        "name": "cif",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1204:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes8",
                          "typeString": "bytes8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1188:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1219:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1211:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1211:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1211:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1188:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1188:33:0"
                }
              ]
            },
            "functionSelector": "b5c3c4ac",
            "id": 132,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 112,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 111,
                  "name": "onlyForester",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "1107:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1107:12:0"
              }
            ],
            "name": "deleteCutter",
            "nameLocation": "1082:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "cif",
                  "nameLocation": "1102:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "1095:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "bytes8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1095:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1094:12:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1129:0:0"
            },
            "scope": 142,
            "src": "1073:156:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1295:42:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 137,
                      "name": "companies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1313:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes8_$dyn_storage",
                        "typeString": "bytes8[] storage ref"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1313:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 136,
                  "id": 139,
                  "nodeType": "Return",
                  "src": "1306:23:0"
                }
              ]
            },
            "functionSelector": "ccb0a334",
            "id": 141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompaniesCount",
            "nameLocation": "1246:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1263:2:0"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1289:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1288:6:0"
            },
            "scope": 142,
            "src": "1237:100:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 143,
        "src": "71:1269:0",
        "usedErrors": []
      }
    ],
    "src": "35:1305:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/ActorsRegistration.sol",
    "exportedSymbols": {
      "ActorsRegistration": [
        142
      ]
    },
    "id": 143,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ActorsRegistration",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 142,
        "linearizedBaseContracts": [
          142
        ],
        "name": "ActorsRegistration",
        "nameLocation": "80:18:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2813d19d",
            "id": 4,
            "mutability": "mutable",
            "name": "companies",
            "nameLocation": "124:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 142,
            "src": "108:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes8_$dyn_storage",
              "typeString": "bytes8[]"
            },
            "typeName": {
              "baseType": {
                "id": 2,
                "name": "bytes8",
                "nodeType": "ElementaryTypeName",
                "src": "108:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes8",
                  "typeString": "bytes8"
                }
              },
              "id": 3,
              "nodeType": "ArrayTypeName",
              "src": "108:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes8_$dyn_storage_ptr",
                "typeString": "bytes8[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "253556c8",
            "id": 8,
            "mutability": "mutable",
            "name": "cutterCompanies",
            "nameLocation": "174:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 142,
            "src": "140:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes8_$_t_address_$",
              "typeString": "mapping(bytes8 => address)"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 5,
                "name": "bytes8",
                "nodeType": "ElementaryTypeName",
                "src": "148:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes8",
                  "typeString": "bytes8"
                }
              },
              "nodeType": "Mapping",
              "src": "140:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes8_$_t_address_$",
                "typeString": "mapping(bytes8 => address)"
              },
              "valueType": {
                "id": 6,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "158:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2b9d6738",
            "id": 12,
            "mutability": "mutable",
            "name": "cutters",
            "nameLocation": "228:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 142,
            "src": "196:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "204:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "196:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 10,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "215:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "465f6b2b",
            "id": 16,
            "mutability": "mutable",
            "name": "foresters",
            "nameLocation": "274:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 142,
            "src": "242:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "250:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "242:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 14,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "261:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "306:47:0",
              "statements": [
                {
                  "expression": {
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19,
                        "name": "foresters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "317:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 22,
                      "indexExpression": {
                        "expression": {
                          "id": 20,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "327:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "327:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "317:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "341:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "317:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "317:28:0"
                }
              ]
            },
            "id": 27,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "303:2:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:0:0"
            },
            "scope": 142,
            "src": "292:61:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "383:112:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 30,
                          "name": "foresters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "410:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 33,
                        "indexExpression": {
                          "expression": {
                            "id": 31,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "420:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "420:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "410:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74207573696e672061207265676973746572656420666f7265737465722061646472657373",
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "433:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1585053ba808b58cf90e68a606e71e52b965f1f7a4d03f2907acda5bf167c09e",
                          "typeString": "literal_string \"Not using a registered forester address\""
                        },
                        "value": "Not using a registered forester address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1585053ba808b58cf90e68a606e71e52b965f1f7a4d03f2907acda5bf167c09e",
                          "typeString": "literal_string \"Not using a registered forester address\""
                        }
                      ],
                      "id": 29,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "402:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "402:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "402:73:0"
                },
                {
                  "id": 37,
                  "nodeType": "PlaceholderStatement",
                  "src": "486:1:0"
                }
              ]
            },
            "id": 39,
            "name": "onlyForester",
            "nameLocation": "370:12:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "383:0:0"
            },
            "src": "361:134:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "576:52:0",
              "statements": [
                {
                  "expression": {
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46,
                        "name": "foresters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "587:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 48,
                      "indexExpression": {
                        "id": 47,
                        "name": "foresterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "597:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "587:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "616:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "587:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "587:33:0"
                }
              ]
            },
            "functionSelector": "30d231ee",
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 43,
                  "name": "onlyForester",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "554:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "554:12:0"
              }
            ],
            "name": "registerForester",
            "nameLocation": "512:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "foresterAddress",
                  "nameLocation": "537:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "529:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "528:25:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:0:0"
            },
            "scope": 142,
            "src": "503:125:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "717:216:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 63,
                            "name": "cutterCompanies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "736:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes8_$_t_address_$",
                              "typeString": "mapping(bytes8 => address)"
                            }
                          },
                          "id": 65,
                          "indexExpression": {
                            "id": 64,
                            "name": "cif",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "752:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes8",
                              "typeString": "bytes8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "736:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "768:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 67,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "760:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 66,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "760:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "760:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "736:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43757474657220636f6d70616e7920616c72656164792072656769737465726564",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "772:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ec9d88a5cac1587011c4484eed1ef3d1dfe271538eb3bba81b8ebaa077e97b4",
                          "typeString": "literal_string \"Cutter company already registered\""
                        },
                        "value": "Cutter company already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ec9d88a5cac1587011c4484eed1ef3d1dfe271538eb3bba81b8ebaa077e97b4",
                          "typeString": "literal_string \"Cutter company already registered\""
                        }
                      ],
                      "id": 62,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "728:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "728:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "728:80:0"
                },
                {
                  "expression": {
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74,
                        "name": "cutterCompanies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "819:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes8_$_t_address_$",
                          "typeString": "mapping(bytes8 => address)"
                        }
                      },
                      "id": 76,
                      "indexExpression": {
                        "id": 75,
                        "name": "cif",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "835:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes8",
                          "typeString": "bytes8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "819:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 77,
                      "name": "cutterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "842:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "819:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "819:36:0"
                },
                {
                  "expression": {
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80,
                        "name": "cutters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "866:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 82,
                      "indexExpression": {
                        "id": 81,
                        "name": "cutterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "874:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "866:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "891:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "866:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "866:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89,
                        "name": "cif",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "921:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes8",
                          "typeString": "bytes8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes8",
                          "typeString": "bytes8"
                        }
                      ],
                      "expression": {
                        "id": 86,
                        "name": "companies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "906:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes8_$dyn_storage",
                          "typeString": "bytes8[] storage ref"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "906:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes8_$dyn_storage_ptr_$_t_bytes8_$returns$__$bound_to$_t_array$_t_bytes8_$dyn_storage_ptr_$",
                        "typeString": "function (bytes8[] storage pointer,bytes8)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "906:19:0"
                }
              ]
            },
            "functionSelector": "a5b4653c",
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59,
                  "name": "onlyForester",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "695:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "695:12:0"
              }
            ],
            "name": "registerCutter",
            "nameLocation": "645:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "cif",
                  "nameLocation": "667:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "660:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "bytes8",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "cutterAddress",
                  "nameLocation": "680:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "672:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "672:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "659:35:0"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "717:0:0"
            },
            "scope": 142,
            "src": "636:297:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1012:53:0",
              "statements": [
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 100,
                        "name": "foresters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1023:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 102,
                      "indexExpression": {
                        "id": 101,
                        "name": "foresterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "1033:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1023:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1052:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1023:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1023:34:0"
                }
              ]
            },
            "functionSelector": "86a781aa",
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 98,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 97,
                  "name": "onlyForester",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "990:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "990:12:0"
              }
            ],
            "name": "deleteForester",
            "nameLocation": "950:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "foresterAddress",
                  "nameLocation": "973:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "965:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "964:25:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:0:0"
            },
            "scope": 142,
            "src": "941:124:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "1129:100:0",
              "statements": [
                {
                  "expression": {
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 114,
                        "name": "cutters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1140:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 118,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 115,
                          "name": "cutterCompanies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1148:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes8_$_t_address_$",
                            "typeString": "mapping(bytes8 => address)"
                          }
                        },
                        "id": 117,
                        "indexExpression": {
                          "id": 116,
                          "name": "cif",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "1164:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes8",
                            "typeString": "bytes8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1148:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1140:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1172:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1140:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1140:37:0"
                },
                {
                  "expression": {
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 122,
                        "name": "cutterCompanies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1188:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes8_$_t_address_$",
                          "typeString": "mapping(bytes8 => address)"
                        }
                      },
                      "id": 124,
                      "indexExpression": {
                        "id": 123,
                        "name": "cif",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1204:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes8",
                          "typeString": "bytes8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1188:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1219:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1211:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1211:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1211:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1188:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1188:33:0"
                }
              ]
            },
            "functionSelector": "b5c3c4ac",
            "id": 132,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 112,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 111,
                  "name": "onlyForester",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "1107:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1107:12:0"
              }
            ],
            "name": "deleteCutter",
            "nameLocation": "1082:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "cif",
                  "nameLocation": "1102:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "1095:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "bytes8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1095:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1094:12:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1129:0:0"
            },
            "scope": 142,
            "src": "1073:156:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1295:42:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 137,
                      "name": "companies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1313:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes8_$dyn_storage",
                        "typeString": "bytes8[] storage ref"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1313:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 136,
                  "id": 139,
                  "nodeType": "Return",
                  "src": "1306:23:0"
                }
              ]
            },
            "functionSelector": "ccb0a334",
            "id": 141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompaniesCount",
            "nameLocation": "1246:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1263:2:0"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1289:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1288:6:0"
            },
            "scope": 142,
            "src": "1237:100:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 143,
        "src": "71:1269:0",
        "usedErrors": []
      }
    ],
    "src": "35:1305:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x7B31a38A00A65F9ff6897D8B280aC0f865a3DeE6",
      "transactionHash": "0x8f21f922018bf1d94cd94116456dc9facd858114054ab938bfec3ec2e86343f6"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-21T20:00:19.270Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}